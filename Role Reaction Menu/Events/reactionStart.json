{
  "name": "reactionStart",
  "temp": "",
  "event-type": "1",
  "_id": "Lwriz",
  "actions": [
    {
      "behavior": "3",
      "name": "Run Action Sequence Once"
    },
    {
      "behavior": "0",
      "interpretation": "1",
      "code": "const _this = this;\nconst fs = require('fs');\n\n//Settings\nconst dmUserAfter = true; // Default, can be changed to false\nvar messageSentAdd = 'Successfully added the role {rolename} in {server}';\nvar messageSentRemove = 'Successfully removed the role {rolename} in {server}';\n// The only variables that work rn, {rolename} and {server}\n\n\nif(fs.existsSync('./data/reactionRoleData.json')) {\n    fs.readFile('./data/reactionRoleData.json', function read(err, data) {\n        if (err) {\n            throw err;\n        }\n        data = JSON.parse(data)\n    \n        _this.storeValue(data, 3, 'reactionRoleInf', cache);\n    });\n} else {\n    fs.writeFile(\"./data/reactionRoleData.json\", \"{}\", function(err) {\n        if(err) {\n            return console.log(err);\n        }\n    });\n    _this.storeValue({}, 3, 'reactionRoleInf', cache);\n}\n\nclient.on('raw', packet => {\n    if (!['MESSAGE_REACTION_ADD', 'MESSAGE_REACTION_REMOVE'].includes(packet.t)) return;\n    const channel = client.channels.cache.get(packet.d.channel_id);\n    if (channel.messages.cache.has(packet.d.message_id)) return;\n    channel.messages.fetch(packet.d.message_id).then(message => {\n        const emoji = packet.d.emoji.id ? `${packet.d.emoji.name}:${packet.d.emoji.id}` : packet.d.emoji.name;\n        const reaction = message.reactions.cache.get(emoji);\n        const reactionUser = client.users.cache.get(packet.d.user_id);\n        if (reaction) reaction.users.cache.set(packet.d.user_id, reactionUser);\n        if (!reactionUser.bot) {\n            if (packet.t === 'MESSAGE_REACTION_ADD') {\n                client.emit('messageReactionAdd', reaction, reactionUser);\n            }\n            if (packet.t === 'MESSAGE_REACTION_REMOVE') {\n                client.emit('messageReactionRemove', reaction, reactionUser);\n            }\n        }\n    });\n});\n\nclient.on('messageReactionAdd', async function(reaction, user) {\n    if (!user.bot) {\n        const reactionData = globalVars(\"reactionRoleInf\");\n        const reactionGuild = reaction.message.guild;\n        const reactionMessage = reaction.message;\n        if (reactionData.hasOwnProperty(reactionMessage.id)) {\n            var emojiName = reaction.emoji.name;\n            var roleInData = reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n            if (roleInData.length != 0) {\n                var guilduser = await reactionGuild.members.fetch(user);\n                var roleData = roleInData[0][1];\n                var reactionRole = await reactionGuild.roles.cache.get(roleData);\n                if (!guilduser.roles.cache.has(roleData)) {\n                    guilduser.roles.add(reactionRole);\n\n                    if (dmUserAfter){guilduser.send(messageSentAdd.replace(\"{rolename}\",`**${reactionRole.name}**`).replace(\"{server}\",`**${reactionGuild.name}**`));}\n                }\n            }\n        }\n    }\n\n});\n\nclient.on('messageReactionRemove', async function(reaction, user) {\n    const reactionData = globalVars(\"reactionRoleInf\");\n    const reactionGuild = reaction.message.guild;\n    const reactionMessage = reaction.message;\n    if (reactionData.hasOwnProperty(reactionMessage.id)) {\n        var emojiName = reaction.emoji.name;\n        var roleInData = reactionData[reactionMessage.id].filter(re => re[0] == emojiName || re[0].name == emojiName)\n        if (roleInData.length != 0) {\n            var guilduser = await reactionGuild.members.fetch(user);\n            var roleData = roleInData[0][1];\n            var reactionRole = await reactionGuild.roles.cache.get(roleData);\n\n            if (guilduser.roles.cache.has(roleData)) {\n                guilduser.roles.remove(reactionRole);\n                if (dmUserAfter){guilduser.send(messageSentRemove.replace(\"{rolename}\",`**${reactionRole.name}**`).replace(\"{server}\",`**${reactionGuild.name}**`));}\n            }\n        }\n    }\n});",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ]
}